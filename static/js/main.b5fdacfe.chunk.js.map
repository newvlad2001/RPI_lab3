{"version":3,"sources":["services/Translator.js","services/DBService.js","components/WriterOTD.js","res/vlad-icon.jpg","res/nikita-icon.jpg","components/Home.js","components/WritersList.js","components/WriterInfo.js","components/Writers.js","App.js","i18n.js","index.js"],"names":["useTranslator","useTranslation","t","i18n","getCurrLang","lang","localStorage","getItem","useEffect","changeLanguage","setLang","setItem","useDBService","jsonFileName","useState","loaded","setLoaded","db","useRef","getKey","element","key","keys","split","temp","forEach","sub","hasOwnProperty","fetch","process","then","res","json","dat","undefined","Error","current","data","value","exact","el","val","toLowerCase","indexOf","push","WriterOTD","props","writer","setWriter","dbLoaded","dbSearchWriter","allWriters","randomIndex","max","length","Math","floor","random","Container","id","style","fluid","className","height","width","objectFit","objectPosition","src","photoUrl","alt","name","dob","dod","description","to","Spinner","animation","ChangeLang","radioValue","setRadioValue","ButtonGroup","toggle","map","radio","idx","ToggleButton","type","variant","checked","onChange","e","currentTarget","Home","Navbar","bg","expand","Toggle","aria-controls","Collapse","Nav","backgroundColor","Jumbotron","backgroundImage","Row","color","Col","md","Card","text","Img","VladIcon","Body","Title","Text","href","NikitaIcon","WritersList","writers","output","Footer","WriterInfo","allLoaded","setAllLoaded","writerInfo","setWriterInfo","shortLoaded","searchShort","longLoaded","searchLong","short","parseInt","long","Object","assign","longDescription","lineColor","bio","b","dateInnerStyle","background","bodyContainerStyle","padding","borderRadius","boxShadow","dateText","date","title","loadBio","Carousel","result","photos","ph","Item","margin","loadPhotos","video","border","allowFullScreen","location","loading","Writers","useParams","dbSearch","searchResult","setSearchResult","query","setQuery","InputGroup","FormControl","target","placeholder","App","fallback","basename","path","component","use","Backend","initReactI18next","init","backend","loadPath","fallbackLng","interpolation","escapeValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5fdacfe.chunk.js","sourcesContent":["import { useEffect } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default function useTranslator() {\n    \n    const { t, i18n } = useTranslation();\n\n    useEffect(() => { i18n.changeLanguage(getCurrLang()) }, []);\n\n    function getCurrLang() {\n        let lang = localStorage.getItem(\"lang\");\n        return lang === null ? \"en\" : lang;\n    }\n\n    function setLang(lang) {\n        localStorage.setItem(\"lang\", lang);\n        i18n.changeLanguage(lang);\n    }\n\n    return { t, getCurrLang, setLang }\n}","import { useEffect, useState, useRef } from \"react\";\n\nexport default function useDBService(jsonFileName) {\n    const [loaded, setLoaded] = useState(false);\n    const db = useRef(null);\n\n    useEffect(() => {\n        fetch(process.env.PUBLIC_URL + \"/db/\" + jsonFileName)\n            .then(res => res.json())\n            .then(dat => {\n                if (dat === undefined) throw new Error(jsonFileName + \" was not found\");\n                if (!dat.hasOwnProperty(\"data\")) throw new Error(\"Invalid file format \" + jsonFileName);\n                db.current = dat.data;\n                setLoaded(true);\n            });\n    }, []);\n\n    function search(key, value, exact = false) {\n        if (value === \"\") return db.current;\n        let res = [];\n        if (db.current !== null) {\n            db.current.forEach(el => {\n                let val = getKey(el, key);\n                if (val !== null) {\n                    if ((exact === true && val === value) || (exact === false && val.toLowerCase().indexOf(value.toLowerCase()) !== -1)) {\n                        res.push(el);\n                    }\n                }\n            });\n        }\n\n        return res;\n    }\n\n    function getKey(element, key) {\n        let keys = key.split('.');\n        let temp = element;\n        keys.forEach(sub => {\n            if (temp.hasOwnProperty(sub)) {\n                temp = temp[sub];\n            } else {\n                temp = null;\n                return;\n            }\n        });\n        return temp;\n    }\n\n    return [loaded, search];\n}","import { useEffect, useState } from \"react\";\nimport { Container, Spinner } from \"react-bootstrap\";\nimport { Link } from \"react-router-dom\";\nimport useTranslator from \"../services/Translator\";\nimport useDBService from \"../services/DBService\";\n\nexport default function WriterOTD(props) {\n\n    const { t, getCurrLang } = useTranslator();\n\n    const [writer, setWriter] = useState(null);\n\n    const [dbLoaded, dbSearchWriter] = useDBService(\"writersS.json\");\n\n    function getRandomInt(max) {\n        return Math.floor(Math.random() * max);\n    }\n\n    useEffect(() => {\n        if (dbLoaded) {\n            let allWriters = dbSearchWriter(\"\", \"\");\n            let randomIndex = getRandomInt(allWriters.length);\n            setWriter(allWriters[randomIndex]);\n        }\n    }, [dbLoaded]);\n\n\n    return (\n        <Container id={props.id} style={props.style} fluid className=\"d-flex flex-column justify-content-center align-items-center\">\n            {\n                dbLoaded === true && writer !== null ? (\n                    <>\n                        <h3>{t(\"landing.writerOTD\")}</h3>\n                        <Container className=\"mb-5 d-flex flex-column justify-content-center align-items-center\">\n                            <Container style={{ height: \"250px\", width: \"250px\" }}>\n                                <img className=\"w-100 h-100\" style={{ objectFit: \"cover\", objectPosition: \"top\" }} src={writer.photoUrl} alt=\"Avatar\" />\n                            </Container>\n                            <Container>\n                                <h3 className=\"text-center\">{writer.name[getCurrLang()]}</h3>\n                                <h4 className=\"text-center\">{writer.dob} - {writer.dod}</h4>\n                                <p className=\"text-center\">{writer.description[getCurrLang()]}</p>\n                            </Container>\n                            <Link className=\"btn btn-outline-secondary\" to={\"/Writers/\" + writer.id}>{t(\"landing.writerLink\")}</Link>\n                        </Container>\n                    </>\n                ) : (\n                    <Spinner animation=\"border\" />\n                )\n            }\n\n        </Container >\n    );\n}","export default __webpack_public_path__ + \"static/media/vlad-icon.9034cdfe.jpg\";","export default __webpack_public_path__ + \"static/media/nikita-icon.d2f1b068.jpg\";","import React from \"react\";\nimport { useState } from \"react\";\nimport { Navbar, Nav, Container, ButtonGroup, ToggleButton, Row, Jumbotron, Card, Col } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport useTranslator from \"../services/Translator\"\nimport \"./home.css\";\nimport { Link } from \"react-router-dom\";\nimport WriterOTD from \"./WriterOTD\";\nimport VladIcon from \"../res/vlad-icon.jpg\";\nimport NikitaIcon from \"../res/nikita-icon.jpg\";\n\nexport function ChangeLang() {\n    const { setLang, getCurrLang } = useTranslator();\n    const [radioValue, setRadioValue] = useState(getCurrLang());\n\n    const radios = [\n        { name: 'ENG', value: 'en' },\n        { name: 'RUS', value: 'ru' },\n    ];\n\n    return (\n        <ButtonGroup toggle>\n            {radios.map((radio, idx) => (\n                <ToggleButton\n                    key={idx}\n                    type=\"radio\"\n                    variant=\"outline-secondary\"\n                    value={radio.value}\n                    checked={radioValue === radio.value}\n                    onChange={(e) => {\n                        setRadioValue(e.currentTarget.value);\n                        setLang(e.currentTarget.value)\n                    }}\n                >\n                    {radio.name}\n                </ToggleButton>\n            ))}\n        </ButtonGroup>\n    );\n}\n\nexport default function Home() {\n    const { t } = useTranslator();\n\n    return (\n        <>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Link className=\"navbar-brand\" to=\"/\">Belarusian Writers</Link>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        <Link className=\"nav-link\" to=\"/Writers\">{t(\"navbar.writers\")}</Link>\n                        <ChangeLang />\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n\n            <Container id=\"land\" fluid style={{ backgroundColor: \"#fff\" }}>\n                {/* style={{ backgroundImage: \"linear-gradient(180deg, rgba(212, 44, 44, 1) 60%, rgba(0, 189, 3, 0.9) 100%)\" }} */}\n                <Jumbotron style={{ backgroundImage: \"linear-gradient(180deg, rgba(212, 44, 44, 1) 60%, rgba(0, 189, 3, 1) 100%)\" }}>\n                    <Row className=\"justify-content-center\">\n                        <h1 className=\"big-heading text-center\">\n                            {t(\"landing.label\")}\n                        </h1>\n                    </Row>\n                    <Row className=\"justify-content-center\">\n                        <h2 className=\"text-center\">\n                            {t(\"landing.desc\")}\n                        </h2>\n                    </Row>\n                    <Row className=\"justify-content-center\">\n                        <Link className=\"btn btn-lg btn-outline-light\" to=\"/Writers\">{t(\"landing.button\")}</Link>\n                    </Row>\n                </Jumbotron>\n            </Container>\n\n            <WriterOTD style={{ height: \"90vh\" }} id=\"daily\" />\n\n            <Container id=\"devs\" className=\"pt-5\" style={{ backgroundImage: \"linear-gradient(180deg, rgba(255, 255, 255, 1) 1%, rgba(53, 62, 74, 1) 100%)\", color: \"white\" }} fluid>\n                <Row className=\"justify-content-center\">\n                    <Col md={2} >\n                        <Card className=\"mb-5 text-center\" text=\"dark\" style={{ width: \"12rem\" }}>\n                            <Card.Img variant=\"top\" src={VladIcon} />\n                            <Card.Body>\n                                <Card.Title>Nevinskiy Vladislav</Card.Title>\n                                <Card.Text>\n                                    <a className=\"mb-0\" href=\"https://github.com/newvlad2001\">newvlad2001</a>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                    <Col md={2} >\n                        <Card className=\"mb-5 text-center\" text=\"dark\" style={{ width: \"12rem\" }}>\n                            <Card.Img variant=\"top\" src={NikitaIcon} />\n                            <Card.Body>\n                                <Card.Title>Fedarenchyk Nikita</Card.Title>\n                                <Card.Text>\n                                    <a className=\"mb-0\" href=\"https://github.com/Fedarenchyk-16\">Fedarenchyk-16</a>\n                                </Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Col>\n                </Row>\n            </Container>\n        </>\n    );\n}","import { Container, Row, Col, Card } from \"react-bootstrap\";\nimport useTranslator from \"../services/Translator\";\nimport { Link } from \"react-router-dom\";\n\nexport default function WritersList(props) {\n    const { t, getCurrLang } = useTranslator();\n\n    if (props.writers !== null && props.writers.length > 0) {\n        let output = [];\n        props.writers.forEach(writer => {\n            output.push(\n                <Col className=\"justify-content-center\" md={3} >\n                    <Card className=\"mb-5\" style={{ width: \"230px\", height: \"450px\" }} >\n                        <Card.Img variant=\"top\" style={{ height: \"200px\", objectFit: \"cover\", objectPosition: \"left top\" }} src={writer.photoUrl} />\n                        <Card.Body>\n                            <Card.Title>{writer.name[getCurrLang()]}</Card.Title>\n                            <Card.Text>{writer.description[getCurrLang()]}</Card.Text>\n                        </Card.Body>\n                        <Card.Footer className=\"d-flex flex-column justify-content-center align-items-center\">\n                            <Link className=\"mt-auto btn btn-outline-secondary\" to={\"/Writers/\" + writer.id}>{t(\"landing.writerLink\")}</Link>\n                        </Card.Footer>\n                    </Card>\n                </Col>\n            );\n        });\n        return (\n            <>\n                <Container fluid>\n                    <Row>\n                        {output}\n                    </Row>\n                </Container>\n            </>\n        );\n    } else {\n        return null;\n    }\n}","import { useEffect, useState } from \"react\";\nimport useDBService from \"../services/DBService\";\nimport useTranslator from \"../services/Translator\";\nimport { Timeline, TimelineItem } from \"vertical-timeline-component-for-react\";\nimport { Container, Carousel, Spinner } from \"react-bootstrap\";\n\nexport default function WriterInfo(props) {\n\n    const { getCurrLang } = useTranslator();\n\n    const [allLoaded, setAllLoaded] = useState(false);\n    const [writerInfo, setWriterInfo] = useState(null);\n\n    const [shortLoaded, searchShort] = useDBService(\"writersS.json\");\n    const [longLoaded, searchLong] = useDBService(\"writersL.json\");\n\n    useEffect(() => {\n        if (shortLoaded === true && longLoaded === true) {\n            let short = searchShort(\"id\", parseInt(props.id), true)[0];\n            let long = searchLong(\"id\", parseInt(props.id), true)[0];\n            if (short !== undefined && long !== undefined) {\n                Object.assign(short, long);\n                setWriterInfo(short);\n                setAllLoaded(true);\n            } else {\n                setAllLoaded(false);\n            }\n        }\n    }, [props.id, shortLoaded, longLoaded]);\n\n    function loadBio() {\n        let res = [];\n        writerInfo.bio.forEach(b => {\n            res.push(\n                <TimelineItem style={{ color: \"#21c25c\" }}\n                    dateInnerStyle={{ background: \"#21c25c\", color: \"#000\" }}\n                    bodyContainerStyle={{\n                        background: \"#ddd\",\n                        padding: \"20px\",\n                        borderRadius: \"8px\",\n                        boxShadow: \"0.5rem 0.5rem 2rem 0 rgba(0, 0, 0, 0.2)\",\n                    }}\n                    dateText={b.date}>\n                    <h3>{b.title[getCurrLang()]}</h3>\n                    <p>{b.text[getCurrLang()]}</p>\n                </TimelineItem>\n            );\n        });\n        return res;\n    }\n\n    function loadPhotos() {\n        let result = [];\n        writerInfo.photos.forEach(ph => {\n            result.push(\n                <Carousel.Item>\n                    <img style={{ height: \"60vh\", objectFit: \"cover\", objectPosition: \"top\", margin: \"auto\" }} className=\"d-block\" src={ph} alt=\"Loading\" />\n                </Carousel.Item>\n            );\n        })\n        return result;\n    }\n\n    return (\n        <>\n            {\n                allLoaded === true ? (\n                    <>\n                        <Container className=\"mb-5\">\n                            <Container md={3} style={{ height: \"250px\", width: \"250px\" }}>\n                                <img className=\"w-100 h-100\" style={{ objectFit: \"cover\", objectPosition: \"top\" }} src={writerInfo.photoUrl} alt=\"Avatar\" />\n                            </Container>\n                            <Container md={9} >\n                                <h3 className=\"text-center\">{writerInfo.name[getCurrLang()]}</h3>\n                                <h4 className=\"text-center\">{writerInfo.dob} - {writerInfo.dod}</h4>\n                                <p>{writerInfo.longDescription[getCurrLang()]}</p>\n                            </Container>\n                        </Container>\n\n                        <Container id=\"bio\">\n                            <Timeline lineColor=\"#ddd\">\n                                {loadBio()}\n                            </Timeline>\n                        </Container>\n\n                        <Container style={{ width: \"60vw\" }}>\n                            <Container id=\"photos\" className=\"mb-5\">\n                                <Carousel style={{ backgroundColor: \"var(--secondary)\" }}>\n                                    {loadPhotos()}\n                                </Carousel>\n                            </Container>\n\n                            <Container id=\"video\" style={{ height: \"60vh\" }} className=\"mb-5\">\n                                <iframe className=\"w-100 h-100\" src={\"https://www.youtube.com/embed/\" + writerInfo.video} title=\"Writer video\" style={{ border: 0 }} allowFullScreen></iframe>\n                            </Container>\n\n                            <Container id=\"map\" style={{ height: \"60vh\" }} className=\"mb-5\">\n                                <iframe className=\"w-100 h-100\" src={\"https://www.google.com/maps/embed?pb=\" + writerInfo.location} title=\"Writer location\" style={{ border: 0 }} loading=\"lazy\"></iframe>\n                            </Container>\n                        </Container>\n                    </>\n                ) : (\n                    <Spinner animation=\"border\" />\n                )\n            }\n        </>\n    );\n}","import React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useParams, Link } from \"react-router-dom\";\nimport { Navbar, Nav, Container, InputGroup, FormControl, Spinner } from \"react-bootstrap\";\nimport useTranslator from \"../services/Translator\";\nimport useDBService from \"../services/DBService\";\nimport WritersList from \"./WritersList\";\nimport { ChangeLang } from \"./Home\";\nimport WriterInfo from \"./WriterInfo\";\n\nexport default function Writers() {\n    const { t, getCurrLang } = useTranslator();\n    const { id } = useParams();\n\n    const [dbLoaded, dbSearch] = useDBService(\"writersS.json\");\n    const [searchResult, setSearchResult] = useState(null);\n\n    const [query, setQuery] = useState(\"\");\n    useEffect(() => {\n        if (dbLoaded === true) {\n            setSearchResult(dbSearch(\"name.\" + getCurrLang(), query));\n        }\n    }, [dbLoaded, query]);\n\n    return (\n        <>\n            <Navbar bg=\"light\" expand=\"lg\">\n                <Link className=\"navbar-brand\" to=\"/\">Belarusian Writers</Link>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"ml-auto\">\n                        {\n                            id === undefined ? (\n                                <InputGroup className=\"mr-4\">\n                                    <FormControl\n                                        value={query}\n                                        onChange={e => setQuery(e.target.value)}\n                                        placeholder={t(\"writers.search\")} />\n                                </InputGroup>\n                            ) : (\n                                <Link className=\"nav-link\" to=\"/Writers\">{t(\"navbar.writers\")}</Link>\n                            )\n                        }\n                        <ChangeLang />\n                    </Nav>\n                </Navbar.Collapse>\n            </Navbar>\n\n            <Container>\n                {\n                    id === undefined ? dbLoaded === false ?\n                        (\n                            <Spinner animation=\"border\" />\n                        ) :\n                        (\n                            <WritersList writers={searchResult} />\n                        ) :\n                        (\n                            <WriterInfo id={id} />\n                        )\n                }\n            </Container>\n        </>);\n}","import React, { Suspense } from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Writers from \"./components/Writers\";\nimport { Spinner } from \"react-bootstrap\";\n\nfunction App() {\n    return (\n        <Suspense fallback={<Spinner animation=\"border\" />}>\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route exact path=\"/\" component={Home} />\n                    <Route path=\"/Writers/:id?\" component={Writers} />\n                </Switch>\n            </Router>\n        </Suspense>\n    );\n}\n\nexport default App;","import i18n from 'i18next';\nimport Backend from 'i18next-http-backend';\nimport { initReactI18next } from 'react-i18next';\n\ni18n\n  .use(Backend)\n  .use(initReactI18next)\n  .init({\n    backend: {\n      loadPath: process.env.PUBLIC_URL + \"/locales/{{lng}}/translation.json\"\n    },\n    fallbackLng: 'en',\n    interpolation: {\n      escapeValue: false,\n    },\n  });\n\nexport default i18n;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./i18n\"\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}